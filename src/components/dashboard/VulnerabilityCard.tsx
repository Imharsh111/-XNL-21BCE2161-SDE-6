
import React from 'react';
import { cn } from '@/lib/utils';
import { SecurityVulnerability } from '@/lib/securityData';

interface VulnerabilityCardProps {
  vulnerability: SecurityVulnerability;
  className?: string;
}

const VulnerabilityCard: React.FC<VulnerabilityCardProps> = ({ 
  vulnerability,
  className
}) => {
  const { name, description, severity, category, status, discovered, affectedComponents } = vulnerability;
  
  // Format date
  const formattedDate = new Date(discovered).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric'
  });
  
  // Severity badge styles
  const severityStyles = {
    critical: 'bg-security-critical/10 text-security-critical border-security-critical/20',
    high: 'bg-security-warning/10 text-security-warning border-security-warning/20',
    medium: 'bg-security-warning/5 text-amber-600 border-amber-200',
    low: 'bg-security-safe/10 text-security-safe border-security-safe/20'
  };
  
  // Status badge styles
  const statusStyles = {
    open: 'bg-security-critical/10 text-security-critical',
    mitigated: 'bg-security-warning/10 text-security-warning',
    resolved: 'bg-security-safe/10 text-security-safe'
  };
  
  // Category icon mapping
  const categoryIcon = (category: string) => {
    switch (category) {
      case 'injection':
        return (
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M19 3L5 17L9 21M12 12L19 19M5 5L10 10" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        );
      case 'authentication':
        return (
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M15 9H9V15H15V9Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M6 19H18C19.1046 19 20 18.1046 20 17V7C20 5.89543 19.1046 5 18 5H6C4.89543 5 4 5.89543 4 7V17C4 18.1046 4.89543 19 6 19Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        );
      case 'data':
        return (
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 8C15.3137 8 18 6.88071 18 5.5C18 4.11929 15.3137 3 12 3C8.68629 3 6 4.11929 6 5.5C6 6.88071 8.68629 8 12 8Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M6 5.5V11.5C6 12.8807 8.68629 14 12 14C15.3137 14 18 12.8807 18 11.5V5.5" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M6 11.5V17.5C6 18.8807 8.68629 20 12 20C15.3137 20 18 18.8807 18 17.5V11.5" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        );
      case 'xss':
        return (
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M8 9L16 17M16 9L8 17" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M3 12C3 16.9706 7.02944 21 12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        );
      case 'configuration':
        return (
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 15C13.6569 15 15 13.6569 15 12C15 10.3431 13.6569 9 12 9C10.3431 9 9 10.3431 9 12C9 13.6569 10.3431 15 12 15Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M19.4 15C19.1277 15.8031 19.2723 16.6718 19.7864 17.2878C20.3005 17.9038 20.0609 18.8167 19.4 19.4C18.7392 19.9833 17.8678 20.2368 17.2518 19.7227C16.6358 19.2086 15.8 19.0399 15 19.2309C14.2 19.4219 13.5988 20.1077 13.5006 20.9097C13.4023 21.7117 12.7384 22.2 12 22.2C11.2616 22.2 10.6286 21.7117 10.4994 20.9097C10.4012 20.1077 9.8 19.4219 9 19.2309C8.2 19.0399 7.36416 19.2086 6.74817 19.7227C6.13218 20.2368 5.26079 19.9833 4.6 19.4C3.93921 18.8167 3.74652 17.9038 4.26065 17.2878C4.77478 16.6718 4.87226 15.8031 4.6 15C4.32774 14.1969 3.65003 13.6835 2.89997 13.6835C2.14991 13.6835 1.79997 12.9468 1.79997 12C1.79997 11.0532 2.14991 10.4331 2.89997 10.4331C3.65003 10.4331 4.36058 9.8031 4.6 9C4.83942 8.1969 4.77478 7.32822 4.26065 6.71222C3.74652 6.09622 3.90692 5.18328 4.6 4.6C5.29308 4.01672 6.13218 3.76323 6.74817 4.27735C7.36416 4.79148 8.2 4.96009 9 4.76913C9.8 4.57817 10.4012 3.89226 10.4994 3.09028C10.5977 2.28831 11.2616 1.8 12 1.8C12.7384 1.8 13.4023 2.28831 13.5006 3.09028C13.5988 3.89226 14.2 4.57817 15 4.76913C15.8 4.96009 16.6358 4.79148 17.2518 4.27735C17.8678 3.76323 18.7392 4.01672 19.4 4.6C20.0609 5.18328 20.2141 6.09622 19.7864 6.71222C19.3587 7.32822 19.2723 8.1969 19.4 9C19.5276 9.8031 20.2394 10.4331 20.9 10.4331C21.5605 10.4331 22 11.0532 22 12C22 12.9468 21.5605 13.6835 20.9 13.6835C20.2394 13.6835 19.5723 14.1969 19.4 15Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        );
      default:
        return (
          <svg width="16" height="16" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 22C17.5228 22 22 17.5228 22 12C22 6.47715 17.5228 2 12 2C6.47715 2 2 6.47715 2 12C2 17.5228 6.47715 22 12 22Z" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M12 16V12" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
            <path d="M12 8H12.01" stroke="currentColor" strokeWidth="2" strokeLinecap="round" strokeLinejoin="round"/>
          </svg>
        );
    }
  };
  
  return (
    <div className={cn(
      "bg-white rounded-xl border border-border p-4 hover:shadow-md transition-all duration-300 card-stack",
      className
    )}>
      <div className="flex justify-between items-start mb-3">
        <div className="flex items-center">
          <span className={cn(
            "inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border",
            severityStyles[severity]
          )}>
            {severity.charAt(0).toUpperCase() + severity.slice(1)}
          </span>
          <span className={cn(
            "ml-2 inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium",
            statusStyles[status]
          )}>
            {status.charAt(0).toUpperCase() + status.slice(1)}
          </span>
        </div>
        <span className="text-xs text-muted-foreground">{formattedDate}</span>
      </div>
      
      <h3 className="text-lg font-medium text-foreground mb-2">{name}</h3>
      
      <p className="text-sm text-muted-foreground mb-4 line-clamp-2">{description}</p>
      
      <div className="flex items-center text-xs text-muted-foreground mb-2">
        <span className="flex items-center text-muted-foreground mr-4">
          {categoryIcon(category)}
          <span className="ml-1 capitalize">{category}</span>
        </span>
      </div>
      
      <div className="mt-4">
        <p className="text-xs font-medium text-muted-foreground mb-1">Affected Components:</p>
        <div className="flex flex-wrap gap-1">
          {affectedComponents.map((component, index) => (
            <span 
              key={index}
              className="inline-flex items-center px-2 py-0.5 rounded text-xs bg-secondary text-secondary-foreground"
            >
              {component}
            </span>
          ))}
        </div>
      </div>
    </div>
  );
};

export default VulnerabilityCard;
